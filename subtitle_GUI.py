#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Dec 23, 2021 07:55:36 PM CST  platform: Windows NT

from youtube_transcript_api import YouTubeTranscriptApi
import urllib.parse as up
import os
from lxml import etree
from getpass import getuser
from tkinter import Text
from platform import system

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import subtitle_GUIS

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    subtitle_GUIS.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    subtitle_GUIS.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("600x450+340+90")
        top.minsize(120, 1)
        top.maxsize(1284, 701)
        top.resizable(1,  1)
        top.title("Youtube Subtitle Extractor")
        top.configure(background="#d9d9d9")

        self.Labelframe1 = tk.LabelFrame(top)
        self.Labelframe1.place(relx=0.033, rely=0.044, relheight=0.522
                , relwidth=0.933)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text='''URL''')
        self.Labelframe1.configure(background="#d9d9d9")

        self.lblUrl = tk.Label(self.Labelframe1)
        self.lblUrl.place(relx=0.036, rely=0.128, height=21, width=84
                , bordermode='ignore')
        self.lblUrl.configure(background="#d9d9d9")
        self.lblUrl.configure(disabledforeground="#a3a3a3")
        self.lblUrl.configure(foreground="#000000")
        self.lblUrl.configure(text='''Youtube URL:''')

        self.urlEntry = tk.Entry(self.Labelframe1)
        self.urlEntry.place(relx=0.196, rely=0.128, height=20, relwidth=0.775
                , bordermode='ignore')
        self.urlEntry.configure(background="white")
        self.urlEntry.configure(disabledforeground="#a3a3a3")
        self.urlEntry.configure(font="TkFixedFont")
        self.urlEntry.configure(foreground="#000000")
        self.urlEntry.configure(insertbackground="black")

        self.BtnExtract = tk.Button(self.Labelframe1, command=self.click)
        self.BtnExtract.place(relx=0.196, rely=0.298, height=34, width=137
                , bordermode='ignore')
        self.BtnExtract.configure(activebackground="#ececec")
        self.BtnExtract.configure(activeforeground="#000000")
        self.BtnExtract.configure(background="#d9d9d9")
        self.BtnExtract.configure(disabledforeground="#a3a3a3")
        self.BtnExtract.configure(foreground="#000000")
        self.BtnExtract.configure(highlightbackground="#d9d9d9")
        self.BtnExtract.configure(highlightcolor="black")
        self.BtnExtract.configure(pady="0")
        self.BtnExtract.configure(text='''Extract Subtitles''')

        self.Labelframe2 = tk.LabelFrame(top)
        self.Labelframe2.place(relx=0.033, rely=0.578, relheight=0.389
                , relwidth=0.933)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(foreground="black")
        self.Labelframe2.configure(text='''Preview''')
        self.Labelframe2.configure(background="#d9d9d9")

        self.Preview = tk.Text(self.Labelframe2)
        self.Preview.place(relx=0.018, rely=0.114, relheight=0.823
                , relwidth=0.954, bordermode='ignore')
        self.Preview.configure(background="white")
        self.Preview.configure(font="TkTextFont")
        self.Preview.configure(foreground="black")
        self.Preview.configure(highlightbackground="#d9d9d9")
        self.Preview.configure(highlightcolor="black")
        self.Preview.configure(insertbackground="black")
        self.Preview.configure(selectbackground="blue")
        self.Preview.configure(selectforeground="white")
        self.Preview.configure(wrap="word")

    def click(self):
        self.Preview.delete("1.0", "end")
        url = self.urlEntry.get()

        urlParse = up.urlparse(url)
        query = up.parse_qs(urlParse.query)
        video = query["v"][0]
        id = str(video)

        sub = YouTubeTranscriptApi.get_transcript(str(id))
        username = getuser()
        os_name = system()

        for insert in sub:
            subsIn = insert['text']
            upSubs = str(subsIn).upper()
            self.Preview.insert("end", upSubs)
            self.Preview.insert("end", "\n")

        with open("C:\\Users\\" + username + "\\Desktop\\subs.txt", "w") as f:
            f.write("""
            SUBTITLES EXTRACTED
            """)
            f.write("""
            TRANSCRIPT:
            """)
            for index in sub:
                subs = index['text']
                f.write("\n")
                upperSubs = str(subs).upper()
                f.write(upperSubs)
                f.write("\n")

        if os_name == "Windows":
            os.system("start C:\\Users\\" + username + "\\Desktop\\subs.txt")

        if os_name == "Darwin":
            os.system("\\Users\\" + username + "\\Desktop\\subs.txt")

if __name__ == '__main__':
    vp_start_gui()





